---
import type { HTMLTag } from "astro/types";

const variantClasses = {
  h1: "text-2xl font-bolder  lg:text-4xl ",
  h2: "text-lg font-bold  lg:text-5xl",
  h3: "text-2xl font-bold  ",
  h4: "text-xl font-semibold ",
  h5: "text-lg font-semibold ",
  p: "text-base font-medium",
};

type Props<Tag extends HTMLTag> = {
  as?: Tag;
  class?: string;
  [key: string]: unknown;
  attributes?: Record<string, unknown>;
};

const { as: Tag, class: classProp, attributes, color, ...props } = Astro.props;
const variant = Tag as keyof typeof variantClasses;

const variantClass =
  variantClasses[variant] || variantClasses.p;


const classes = [variantClass, classProp].filter(Boolean).join(" ");
---

<Tag class={classes} {...props}  {...attributes}  >
  <slot />
</Tag>