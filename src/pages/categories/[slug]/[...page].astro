---
import { getCategoriesWithPosts } from "../../../services/categoriesWithPosts";
import Layout from "../../../layouts/Layout.astro";
import PostCard from "../../../components/organisms/Posts/components/PostCard/PostCard.astro";
import Pagination from "../../../components/atoms/Pagination/Pagination.astro";

export const prerender = true;

export async function getStaticPaths({ paginate }) {
  const categoriesWithPostsGrouped = await getCategoriesWithPosts();

  return Object.values(categoriesWithPostsGrouped).flatMap((categories) => {
    const category = categories[0];
    if (!category) return [];

    const categorySlug = category.slug;
    const categoryName = category.name;

    return paginate(category.posts, {
      params: { slug: categorySlug },
      pageSize: 4,
      props: {
        categoryName,
        categorySlug,
      },
    });
  });
}

const { page } = Astro.props;
const { categoryName, categorySlug } = Astro.props;
const { slug } = Astro.params;
---

<Layout title={`${categoryName} - PÃ¡gina ${page.currentPage}`}>
  <main class="main">
    <section class="categories">
      <div class="category-header">
        <h1 class="categories__title">{categoryName}</h1>
      </div>

      <div class="categories__cards">
        <ul role="list" class="link-card-grid">
          {page.data.map((post) => (
            <li>
              <PostCard
                title={post.title}
                excerpt={post.excerpt}
                slug={post.slug}
                date={post.date}
                image={post.image}
                author={post.author}
                categories={post.categories}
              />
            </li>
          ))}
        </ul>
      </div>

      {page.lastPage > 1 && (
        <Pagination
          currentPage={page.currentPage}
          totalPages={page.lastPage}
          baseUrl={`/categories/${categorySlug}`}
          page={page}
        />
      )}
    </section>
  </main>
</Layout>

<style lang="scss" is:inline>
  @use "@sass/variables" as v;
  @use "@sass/mixins" as *;

  main {
    margin: 10rem auto;
    width: 100%;
    height: 100%;
  }

  .categories {
    max-width: 1300px;
    margin: 0 auto;
  }

  .categories__cards {
    width: 100%;
  }

  .category-header {
    margin-bottom: 2rem;
    text-align: center;
  }

  .categories__title {
    font-size: 2.5rem;
    text-align: center;
    font-weight: 700;
    color: v.$french-violet;
    transition: color 0.3s ease-in-out;
    margin-bottom: 0.5rem;
  }

  .category-description {
    color: var(--textColor);
    font-size: 1.1rem;
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .link-card-grid {
    display: grid;
    place-content: start;
    grid-template-columns: repeat(auto-fit, minmax(25rem, 19%));
    grid-template-rows: auto;
    gap: 2rem;
    justify-content: center;
    width: 100%;
    padding: 2rem;
    list-style: none;
    margin: 0;
  }

  .link-card-grid li {
    display: block;
  }

  .post-card {
    @include flexConfig(space-evenly);
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-direction: column;
    height: 100%;
    min-height: 12rem;
    padding: 0;
  }

  @media (max-width: 768px) {
    .categories__title {
      font-size: 2rem;
    }

    .link-card-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }
</style>