---
import type { Post } from "@src/types/post.type";
import Categories from "@organisms/Posts/components/Categories.astro";
interface Props extends Post {
  showMeta?: boolean;
}

const { title, slug, excerpt, image, categories, showMeta=true } = Astro.props;
---

<article class="secondary-card">
  <div class="secondary-card__container">
    <img src={image?.mediaItemUrl || "/img/defaultBanner.png"} alt={title} class="container__image"
    width="297"
    height="148.5"
    />
  </div>
  <div class={`secondary-card__content ${showMeta ? "" : "secondary-card__content--hide-excerpt"}`}>
    <a href={`/blog/${slug}`}
    aria-label={`Read more about ${title}`}
    class="secondary-card__title">
      {title}
     </a>
     <Fragment set:html={excerpt} />
    {showMeta &&
    <Categories {categories}  class="secondary-card__tags"/>
    }
  </div>
</article>

<style is:global lang="scss">
  @use "@sass/variables" as v;
  @use "@sass/mixins" as  *;

  .secondary-card {
    border: var(--card-border);
    background-color: var(--bg-card);
    display: flex
;
    align-items: center;
    justify-content: space-around;
    padding: 0.8rem;
    color: var(--mainColor);
    width: 100%;
    gap: 1rem;
    box-shadow: 0 0 7px 0px rgba(0, 0, 0, 0.65);
    border-radius: 12px;
    height: 100%;
    @include respond-to("medium") {
      width: 100%;

      max-height: 100%;
    }

    &__container {
      overflow: hidden;
      width: 137px;
      height: 100%;
      border-radius: 1.2rem;
      @include respond-to("medium") {
        width: 100px;
        height: 97px;
      }
      & img {
        transition: transform 0.3s ease-in-out;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      &:hover img {
        transform: scale(1.1);
      }
    }
    &__content {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: .5rem;
      & > p {
        text-wrap:pretty;
        font-size:1.20rem ;
        @include respond-to("medium") {
          text-wrap:stable;
        }
      }
    }
    &__content--hide-excerpt {
      & > p {
        @include respond-to("medium") {
        display: none;
      }
      }
    }

    &__title {
      color: var(--mainColor);
      text-transform: uppercase;
      font-size: 1.8rem;
      font-weight: 700;
      &:hover{
        color: v.$french-violet;
      }
      @include respond-to("medium") {
        font-size: 1.3rem;
      }
    }

    &__tags {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
      @include respond-to("medium") {
        display: none;
      }
    }
    &__tag {
      padding: 0.3rem 0.7rem;
      background-color: v.$french-violet;
      color: white;
      border-radius: 1rem;
      font-size: 1.2rem;
      font-weight: 400;
    }
  }
</style>
