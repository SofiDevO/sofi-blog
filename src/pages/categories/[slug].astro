---
import Pagination from "@atoms/Pagination/Pagination.astro";
import PostCard from "@organisms/Posts/components/PostCard/PostCard.astro";
import Layout from "@src/layouts/Layout.astro";
import { getCategoriesWithPosts } from "@src/services/categoriesWithPosts";

export const prerender = true;

export async function getStaticPaths({ paginate }) {
  const categoriesWithPosts = await getCategoriesWithPosts();
  const allPaths = [];

  Object.entries(categoriesWithPosts).forEach(([categorySlug, categoryArray]) => {
    const category = categoryArray[0];
    if (!category) return;

    // Usar la API oficial paginate() de Astro
    const paginatedPaths = paginate(category.posts, {
      params: { slug: categorySlug },
      pageSize: 4,
      props: {
        categoryName: category.name,
        categorySlug: categorySlug
      }
    });

    allPaths.push(...paginatedPaths);
  });

  return allPaths;
}

// Obtener datos del objeto page que proporciona paginate()
const { page, categoryName, categorySlug } = Astro.props;
const { data: paginatedPosts } = page;

---

<Layout>
  <h2 class="categories__title">
    Posts de la categor√≠a: {categoryName}
  </h2>
  <section class="categories">
    <div class="categories__cards">
      {
        paginatedPosts.length > 0 ? (
          <ul role="list" class="link-card-grid">
            {paginatedPosts.map((post) => {
              return (
                <li>
                  <PostCard {...post} />
                </li>
              );
            })}
          </ul>
        ) : (
          <div class="categories__cards">
            <p>No se encontraron posts en esta categor√≠a. ü¶ù</p>
          </div>
        )
      }
    </div>
  </section>
  {
    page.lastPage > 1 && (
      <Pagination
        currentPage={page.currentPage}
        totalPages={page.lastPage}
        baseUrl={`/categories/${categorySlug}`}
        page={page}
      />
    )
  }
</Layout>

<style lang="scss" is:inline>
  @use "@sass/variables" as v;
  @use "@sass/mixins" as *;
  main {
    margin: 10rem auto;
    width: 100%;
    height: 100%;
  }
  .categories__title {
    font-size: 2.5rem;
    text-align: center;
    font-weight: 700;
    color: v.$french-violet;
    transition: color 0.3s ease-in-out;
  }
  .categories {
    max-width: 1300px;
    margin: 0 auto;
  }
  .post-card {
    @include flexConfig(space-evenly);
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-direction: column;
    height: 100%;
    min-height: 12rem;
    padding: 0;
  }
</style>
