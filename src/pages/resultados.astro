---
import PostCard from "@organisms/Posts/components/PostCard/PostCard.astro";
import Title from "@src/components/atoms/Title/Title.astro";
import ResultadosPopUp from "@src/components/organisms/Posts/Resultados/ResultadosPopUp.astro";
import Layout from "@src/layouts/Layout.astro";
import { searchPosts } from "@src/services/getResults";
import Pagination from "@atoms/Pagination/Pagination.astro";

const { url, request } = Astro;
const search = url.searchParams.get("search");
const header = request.headers.get("X-Requested-With");

const pathname = url.pathname;
const posts = search && search === "" ? [] : await searchPosts(search);



// Configuración de paginación
const postsPerPage = 4;
const currentPage = Number(Astro.url.searchParams.get("page")) || 1;
const totalPages = Math.ceil(posts.length / postsPerPage);

// Obtener los posts para la página actual
const startIndex = (currentPage - 1) * postsPerPage;
const endIndex = startIndex + postsPerPage;
const paginatedPosts = posts.slice(startIndex, endIndex);

let padding = "9rem";
if (pathname === "/") {
  padding = "0";
}

---




{
  header !== "XMLHttpRequest" ? (

    <Layout title="Resultados" class="main">
      <section class="results">
        <Title titleDesc={`Resultados de ${search}`} class="results__title " />
        <ul role="list" class="link-card-grid">
          {paginatedPosts.length !== 0 && paginatedPosts.map((post) => <PostCard {...post} />)}
        </ul>
        {totalPages > 1 && (
          <Pagination
            currentPage={currentPage}
            totalPages={totalPages}
            baseUrl={url.pathname}
            query={url.searchParams}
          />
        )}
      </section>
    </Layout>
  ) : (
    <ResultadosPopUp {search} posts={posts.slice(0, 4)} />
  )
}

<style lang="scss"  define:vars={{padding}}>
  @use "@sass/variables" as v;
  @use "@sass/mixins" as  *;

  .results {
    padding: var(--padding) 0;
    max-width: 1300px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2rem;

    &__title {
      @include titleType("small");
      text-align: center;
      color: v.$french-violet;
      transition: color 0.3s ease-in-out;
      font-size: 4rem;
      font-weight: 700;
    }
    &__cards {
      width: 100%;
      @include flexConfig(center);
      flex-direction: column;
      min-height: 380px;
      margin-bottom: 3rem;
    }
  }
</style>
